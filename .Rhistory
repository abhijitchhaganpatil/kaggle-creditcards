required_packages <- c(
# Add to this list the packages that you will use - if unavailable, it will be
# automatically installed
"readr",
"data.table",
"dplyr",
"ggplot2",
"mlr"
)
packages_to_install = required_packages[!(required_packages %in%
installed.packages()[, 1])]
if (length(packages_to_install) > 0) {
install.packages(packages_to_install)
}
suppressPackageStartupMessages({
sapply(required_packages, require, character.only = TRUE)
})
library(pander)
library(knitr)
library(xtable)
opts_chunk$set(cache = TRUE)
required_packages = c(
# Add to this list the packages that you will use - if unavailable, it will be
# automatically installed
"Hmisc",
"dplyr",
"readr",
"data.table",
"lubridate",
"ggplot2",
"dprep",
"geoR",
"cluster"
)
packages_to_install = required_packages[!(required_packages %in%
installed.packages()[, 1])]
if (length(packages_to_install) > 0) {
install.packages(packages_to_install)
}
suppressPackageStartupMessages({
sapply(required_packages, require, character.only = TRUE)
})
data_dictionary <- read_csv('Data Dictionary.csv')
kable(data.frame(data_dictionary))
moa_analytics <- read_csv('moa_analytics.csv')
moa_recurrence <- read_csv('moa_recurrence.csv')
#Since this file is large, we use the fread() function from the data.table
#package that enables faster reading of large files
moa_session_update <- fread("moa_session_update.csv")
summary(moa_analytics[,c(1:18)])
summary(moa_recurrence)
moa_analytics <- mutate(moa_analytics,
device = as.factor(device),
session_date = mdy(session_date))
moa_recurrence <- mutate(moa_recurrence,
device = as.factor(device),
session_date = mdy(session_date))
moa_analytics <- left_join(moa_analytics,
moa_recurrence,
by = c("device"="device",
"session_date"="session_date"))
# Function to replace NAs with 0s
replace_na_0 <- function(x) {
x[is.na(x)] <- 0
return(x)
}
# Replace NA values in time columns with 0
timed <- moa_analytics %>%
select(duration, contains("time_"),
in_30days, in_60days) %>% #Select time variables
mutate_all(replace_na_0) # Replaces all NA values with 0
#
moa_data <- moa_analytics %>%
select(-duration, -contains("time_"),
-in_30days, -in_60days) %>%
bind_cols(timed)
# Extract hour from timestamp variables
moa_data <- mutate(moa_data,
entry_time = hour(entry_time),
exit_time = hour(exit_time))
# Select only sessions that occured starting from November 2015
moa_data <- filter(moa_data, session_date >= "2015-11-01")
#Count number of visits by counting number of occurences by each device
moa_data <- group_by(moa_data, device) %>%
mutate(num_visits = n()) %>%
ungroup()
